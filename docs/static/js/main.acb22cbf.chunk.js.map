{"version":3,"sources":["query/bloxyHolders.js","query/etherscanHolders.js","query/contractLabels.js","query/tokenPrice.js","App.js","reportWebVitals.js","index.js"],"names":["BLOXY_API_KEY","bloxyHolders","token","a","fetch","response","json","res","i","length","cell","data","rank","label","annotation","trim","contract","address_type","address","toLowerCase","amount","balance","push","etherscanHolders","network","domain","text","html","page","cheerio","load","cells","find","eq","Number","has","attr","split","pop","replaceAll","percent","SPREADSHEET_ID","parser","GoogleSheetParser","getContractLabels","parse","items","item","getTokenPrice","tokenDetails","coingeckoId","contractsGoogleSheet","tokenOptions","key","value","tokenDetailsByAddress","details","renderTable","contracts","labels","tokenPrice","onClickHolders","etherscanDomain","Table","textAlign","celled","padded","compact","collapsing","style","margin","Header","Row","HeaderCell","Body","map","Cell","href","target","rel","website","formatTVL","Button","onClick","Math","round","App","useState","setTokenDetails","setContracts","setLabels","setTokenPrice","useEffect","queryTopContracts","queryLabels","queryTokenPrice","className","Form","Dropdown","button","selection","floating","labeled","icon","options","defaultValue","search","onChange","_","Container","Loader","active","inline","c","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acb22cbf.chunk.js","sourcesContent":["const BLOXY_API_KEY = 'ACCsay814xxhw';\n\n// ethereum only\nexport async function bloxyHolders(token) {\n  const response = await fetch(`https://api.bloxy.info/token/token_holders_list?token=${token}&limit=100&key=${BLOXY_API_KEY}&format=structure`);\n  const json = await response.json();\n  const res = [];\n  for (let i = 0; i < json.length; i++) {\n    const cell = json[i];\n    const data = {};\n    data.rank = i;\n    data.label = cell.annotation.trim();\n    data.contract = cell.address_type !== 'Wallet';\n    data.address = cell.address.toLowerCase();\n    data.amount = cell.balance;\n    if (data.contract) res.push(data);\n  }\n  return res;\n}\n","import cheerio from 'cheerio';\n\n// network: ethereum / bsc\nexport async function etherscanHolders(network, token) {\n  const domain = network === 'ethereum' ? 'etherscan.io' : 'bscscan.com';\n  const response = await fetch(`https://thingproxy.freeboard.io/fetch/https://${domain}/token/tokenholderchart/${token}?range=500`);\n  const html = await response.text();\n  const page = cheerio.load(html);\n  const res = [];\n  const cells = page('table').find('tr td');\n  let data;\n  for (let i = 0; i < cells.length; i++) {\n    const cell = cells.eq(i);\n    switch (i % 4) {\n      case 0:\n        data = {};\n        data.rank = Number(cell.text());\n        break;\n      case 1:\n        data.label = cell.text().trim();\n        data.contract = cell.has('i').length > 0;\n        data.address = '0x' + cell.find('a').attr('href').split('0x').pop().toLowerCase();\n        break;\n      case 2:\n        data.amount = Number(cell.text().replaceAll(',', ''));\n        break;\n      case 3:\n        data.percent = Number(cell.text().replaceAll('%', ''));\n        if (data.contract) res.push(data);\n        break;\n      default:\n    }\n  }\n  return res;\n}","import GoogleSheetParser from 'public-google-sheets-parser';\n\nexport const SPREADSHEET_ID = '1dVakt-XR9TNiV9K0334UEo0w9lc2NIOYC_J1yiTPx6w';\nconst parser = new GoogleSheetParser();\n\n// network: ethereum / bsc\nexport async function getContractLabels(network) {\n  const items = await parser.parse(SPREADSHEET_ID, network);\n  const res = {};\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    res[item.address] = item;\n  }\n  return res;\n}\n","export async function getTokenPrice(tokenDetails) {\n  if (!tokenDetails || !tokenDetails.coingeckoId) return null;\n  const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${tokenDetails.coingeckoId}&vs_currencies=usd`);\n  const json = await response.json();\n  return Number(json[tokenDetails.coingeckoId]['usd']);\n}","import 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport {Dropdown, Loader, Table, Container, Form, Button} from 'semantic-ui-react';\n\nimport { bloxyHolders } from './query/bloxyHolders';\nimport { etherscanHolders } from './query/etherscanHolders';\nimport {getContractLabels, SPREADSHEET_ID} from './query/contractLabels';\nimport { getTokenPrice } from './query/tokenPrice';\n\nconst contractsGoogleSheet = `https://docs.google.com/spreadsheets/d/${SPREADSHEET_ID}/edit?usp=sharing`;\n\nconst tokenOptions = [\n  {\n    network: 'ethereum',\n    key: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n    text: 'WETH',\n    value: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n    coingeckoId: 'ethereum'\n  },\n  {\n    network: 'ethereum',\n    key: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    text: 'USDC',\n    value: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    coingeckoId: 'usd-coin'\n  },\n  {\n    network: 'ethereum',\n    key: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n    text: 'WBTC',\n    value: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n    coingeckoId: 'wrapped-bitcoin'\n  },\n  {\n    network: 'ethereum',\n    key: '0xeb4c2781e4eba804ce9a9803c67d0893436bb27d',\n    text: 'renBTC',\n    value: '0xeb4c2781e4eba804ce9a9803c67d0893436bb27d',\n    coingeckoId: 'renbtc'\n  },\n  {\n    network: 'bsc',\n    key: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    text: 'bsc: BUSD',\n    value: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    coingeckoId: 'binance-usd'\n  },\n  {\n    network: 'bsc',\n    key: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    text: 'bsc: USDC',\n    value: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    coingeckoId: 'usd-coin'\n  },\n  {\n    network: 'bsc',\n    key: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    text: 'bsc: WBNB',\n    value: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    coingeckoId: 'binance-coin'\n  },\n  {\n    network: 'bsc',\n    key: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    text: 'bsc: BTCB',\n    value: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    coingeckoId: 'binance-bitcoin'\n  }\n];\n\nconst tokenDetailsByAddress = {};\nfor (let i = 0; i < tokenOptions.length; i++) {\n  const details = tokenOptions[i];\n  tokenDetailsByAddress[details.key.toLowerCase()] = details;\n}\n\nfunction App() {\n  const [tokenDetails, setTokenDetails] = useState(tokenOptions[0]);\n  const [contracts, setContracts] = useState(null);\n  const [labels, setLabels] = useState(null);\n  const [tokenPrice, setTokenPrice] = useState(null);\n  useEffect(() => {\n    const queryTopContracts = async () => {\n      setContracts(null);\n      const res = tokenDetails.network === 'ethereum' ?\n        await bloxyHolders(tokenDetails.value) :\n        await etherscanHolders(tokenDetails.network, tokenDetails.value);\n      setContracts(res);\n    }\n    const queryLabels = async () => {\n      setLabels(null);\n      const res = await getContractLabels(tokenDetails.network);\n      setLabels(res);\n    }\n    const queryTokenPrice = async () => {\n      setTokenPrice(null);\n      const res = await getTokenPrice(tokenDetails);\n      setTokenPrice(res);\n    }\n    queryTopContracts();\n    queryLabels();\n    queryTokenPrice();\n  }, [tokenDetails]);\n  return (\n    <div className=\"App\">\n      <Form style={{margin: '20px'}}>\n        <Dropdown\n            button\n            selection\n            className='icon'\n            floating\n            labeled\n            icon='world'\n            options={tokenOptions}\n            defaultValue={tokenOptions[0].value}\n            value={tokenDetails.value}\n            search\n            onChange={(_, data) => {\n              setTokenDetails(tokenDetailsByAddress[data.value.toLowerCase()]);\n            }}\n        />\n      </Form>\n      <Container>\n      {contracts === null || labels === null || tokenPrice === null ?\n        <Loader active inline='centered' /> :\n        renderTable(tokenDetails.network, contracts, labels, tokenPrice, (contract) => {\n          const c = {\n              network: tokenDetails.network,\n              key: contract.address.toLowerCase(),\n              text: labels[contract.address]?.label || \"\",\n              value: contract.address,\n              coingeckoId: 'ethereum'\n          }\n          tokenDetailsByAddress[c.key] = c;\n          tokenOptions.push(c);\n          setTokenDetails(c);\n        })\n      }\n      </Container>\n    </div>\n  );\n}\n\nfunction renderTable(network, contracts, labels, tokenPrice, onClickHolders) {\n  const etherscanDomain = network === 'ethereum' ? 'etherscan.io' : 'bscscan.com';\n  return (\n    <Table textAlign='left' celled padded compact collapsing style={{margin: 'auto'}}>\n      <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Address</Table.HeaderCell>\n        <Table.HeaderCell>Label</Table.HeaderCell>\n        <Table.HeaderCell>Amount</Table.HeaderCell>\n        <Table.HeaderCell>Holders</Table.HeaderCell>\n      </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {\n          contracts.map((item) => (\n            <Table.Row>\n              <Table.Cell><a href={`https://${etherscanDomain}/address/${item.address}`}\n                             target=\"_blank\"\n                             rel=\"noreferrer\">{item.address}</a>\n              </Table.Cell>\n              <Table.Cell><a href={\n                labels[item.address] ?\n                labels[item.address].website :\n                contractsGoogleSheet\n              } target=\"_blank\" rel=\"noreferrer\">{\n                labels[item.address] ?\n                labels[item.address].label :\n                `<please add>`\n              }</a></Table.Cell>\n              <Table.Cell>{formatTVL(item.amount * tokenPrice)}</Table.Cell>\n              <Table.Cell>\n                <Button onClick={() => onClickHolders(item)}>Holders</Button>\n              </Table.Cell>\n            </Table.Row>\n          ))\n        }\n      </Table.Body>\n    </Table>\n  );\n}\n\nfunction formatTVL(amount) {\n  if (amount > 1e9) return '$' + Math.round(amount/1e9) + 'B';\n  if (amount > 1e6) return '$' + Math.round(amount/1e6) + 'M';\n  if (amount > 1e3) return '$' + Math.round(amount/1e3) + 'K';\n  return '$' + Math.round(amount);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}